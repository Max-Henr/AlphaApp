@model ProjectConnectModel
@{
	Layout = "_Layout";
}
<div class="project-container">
<div class="project-flex">
	<div class="project-nav">
		<h1 class="project-title">Projects</h1>
		<button class="btn-add-project" id="open-add-project" data-modal="true" data-target="#project-modal">
			Add Project
		</button>
		<ul class="project-status">
			<li>
					<a asp-action="Project" asp-controller="Project" class="project-status-link">All [@(Model.AllProjects?.Count() ?? 0)]</a>
			</li>
			<li>
					<a asp-action="Started" asp-controller="Project" class="project-status-link">Started [@(Model.AllProjects?.Count(p => p.Status.Id == "1") ?? 0)]</a>
			</li>
			<li>
					<a asp-action="completed" asp-controller="Project" class="project-status-link">Completed [@(Model.AllProjects?.Count(p => p.Status.Id == "2") ?? 0)]</a>
			</li>
		</ul>
	</div>
</div>
<div class="project-cards-flex">
	@foreach (var project in Model.Projects!)
	{
		<partial name="Partials/_ProjectCardPartial" model="project"/>

	}
</div>
		@await Html.PartialAsync("Partials/_AddProjectPartial")
	<div id="modal-placeholder">
		@await Html.PartialAsync("Partials/_EditProjectPartial", Model)
	</div>
</div>